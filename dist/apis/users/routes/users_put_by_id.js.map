{"version":3,"sources":["../source/apis/users/routes/users_put_by_id.js"],"names":["router","express","Router","userSchema","body","profileImage","Joi","string","deviceToken","active","boolean","put","baseUrl","secret","env","JWT_SECRET","isRevoked","getLoggedInUser","req","res","next","params","id","loggedInUser","_id","updateUser"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAEC,eAAIC,MAAJ,EADV;AAEJC,IAAAA,WAAW,EAAEF,eAAIC,MAAJ,EAFT;AAGJE,IAAAA,MAAM,EAAEH,eAAII,OAAJ;AAHJ;AADW,CAAnB;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDAV,MAAM,CAACW,GAAP,CACG,GAAEC,gBAAQ,KADb,EAEE,yBAAW;AACTC,EAAAA,MAAM,EAAEC,aAAIC,UADH;AAETC,EAAAA,SAAS,EAAE;AAFF,CAAX,CAFF,EAME,0BAAUb,UAAV,CANF,EAOEc,0BAPF,EAQE,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClBF,EAAAA,GAAG,CAACG,MAAJ,CAAWC,EAAX,GAAgBJ,GAAG,CAACK,YAAJ,CAAiBC,GAAjC;AACAJ,EAAAA,IAAI;AACL,CAXH,EAYEK,wBAZF;AAeAzB,MAAM,CAACW,GAAP,CACG,GAAEC,gBAAQ,MADb,EAEE,yBAAW;AACTC,EAAAA,MAAM,EAAEC,aAAIC,UADH;AAETC,EAAAA,SAAS,EAAE;AAFF,CAAX,CAFF,EAME,0BAAUb,UAAV,CANF,EAOEc,0BAPF,EAQEQ,wBARF;eAUezB,M","sourcesContent":["import express from 'express';\nimport expressJWT from 'express-jwt';\nimport { Joi, celebrate } from 'celebrate';\nimport updateUser from '../controllers/users_put_by_id';\nimport { baseUrl } from '../baseurl';\nimport env from '../../../config/env';\nimport { getIsRevokedCallBackForAccessToken } from '../../../helpers/revokeToken/checkRevokedToken';\nimport getLoggedInUser from '../../../middlewares/get_loggedIn_user';\n\nconst router = express.Router();\n\nconst userSchema = {\n  body: {\n    profileImage: Joi.string(),\n    deviceToken: Joi.string(),\n    active: Joi.boolean(),\n  },\n};\n\n/**\n * @swagger\n * /users/me:\n *   put:\n *     tags:\n *       - Users\n *     description: Update user details\n *     consumes:\n *       - application/json\n *     produces:\n *       - application/json\n *     parameters:\n *       - in: \"body\"\n *         name: \"body\"\n *         description: \"_id of a video\"\n *         required: true\n *         schema:\n *           type: object\n *           properties:\n *              deviceToken:\n *                type: string\n *              profileImage:\n *                type: string\n *              active:\n *                type: boolean\n *     responses:\n *       200:\n *         description: A JSON object\n *         schema:\n *           type: object\n *           properties:\n *              userId:\n *                  type: string\n *              firstName:\n *                  type: string\n *              lastName:\n *                  type: string\n *              mobileNumber:\n *                  type: string\n *              email:\n *                  type: string\n *              profileImage:\n *                  type: string\n *       400:\n *         description: Returns 400 if userId or password are invalid\n *         schema:\n *           type: object\n *           properties:\n *              statusCode:\n *                  type: number\n *                  example: 400\n *              error:\n *                  type: string\n *              message:\n *                  type: string\n */\n\nrouter.put(\n  `${baseUrl}/me`,\n  expressJWT({\n    secret: env.JWT_SECRET,\n    isRevoked: getIsRevokedCallBackForAccessToken(),\n  }),\n  celebrate(userSchema),\n  getLoggedInUser,\n  (req, res, next) => {\n    req.params.id = req.loggedInUser._id;\n    next();\n  },\n  updateUser\n);\n\nrouter.put(\n  `${baseUrl}/:id`,\n  expressJWT({\n    secret: env.JWT_SECRET,\n    isRevoked: getIsRevokedCallBackForAccessToken(),\n  }),\n  celebrate(userSchema),\n  getLoggedInUser,\n  updateUser\n);\nexport default router;\n"],"file":"users_put_by_id.js"}