{"version":3,"sources":["../source/apis/users/routes/user_put_by_id_image.js"],"names":["router","express","Router","storage","multer","memoryStorage","upload","put","baseUrl","secret","env","JWT_SECRET","isRevoked","single","getLoggedInUser","req","res","next","params","id","loggedInUser","_id","uploadImage"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAEA,MAAMC,OAAO,GAAGC,gBAAOC,aAAP,EAAhB;;AAEA,MAAMC,MAAM,GAAG,qBAAO;AAAEH,EAAAA;AAAF,CAAP,CAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAH,MAAM,CAACO,GAAP,CACG,GAAEC,gBAAQ,kBADb,EAEE,yBAAW;AACTC,EAAAA,MAAM,EAAEC,aAAIC,UADH;AAETC,EAAAA,SAAS,EAAE;AAFF,CAAX,CAFF,EAMEN,MAAM,CAACO,MAAP,CAAc,MAAd,CANF,EAOEC,0BAPF,EAQE,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClBF,EAAAA,GAAG,CAACG,MAAJ,CAAWC,EAAX,GAAgBJ,GAAG,CAACK,YAAJ,CAAiBC,GAAjC;AACAJ,EAAAA,IAAI;AACL,CAXH,EAYEK,8BAZF;eAeetB,M","sourcesContent":["import express from 'express';\nimport expressJWT from 'express-jwt';\nimport multer from 'multer';\nimport { baseUrl } from '../baseurl';\nimport env from '../../../config/env';\nimport { getIsRevokedCallBackForAccessToken } from '../../../helpers/revokeToken/checkRevokedToken';\nimport getLoggedInUser from '../../../middlewares/get_loggedIn_user';\nimport uploadImage from '../controllers/user_put_profileimage';\n\nconst router = express.Router();\n\nconst storage = multer.memoryStorage();\n\nconst upload = multer({ storage });\n\n/**\n * @swagger\n * /users/me/profileimage:\n *   put:\n *     tags:\n *       - Users\n *     description: upload profile\n *     consumes:\n *       - multipart/form-data\n *     parameters:\n *       - in: formData\n *         name: file\n *         type: file\n *         description: The file to upload.\n *     produces:\n *       - application/json\n *     responses:\n *       200:\n *         description: A JSON object\n *         schema:\n *           type: object\n *           properties:\n *              url:\n *                  type: string\n */\n\nrouter.put(\n  `${baseUrl}/me/profileimage`,\n  expressJWT({\n    secret: env.JWT_SECRET,\n    isRevoked: getIsRevokedCallBackForAccessToken(),\n  }),\n  upload.single('file'),\n  getLoggedInUser,\n  (req, res, next) => {\n    req.params.id = req.loggedInUser._id;\n    next();\n  },\n  uploadImage\n);\n\nexport default router;\n"],"file":"user_put_by_id_image.js"}