{"version":3,"sources":["../source/apis/users/services/get_user_count_by_id.js"],"names":["getInvalidUserIds","userIds","Users","validUsersInDb","find","userId","$in","select","validUserIds","map","user","_id","lodash","difference"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,eAAeA,iBAAf,CAAiCC,OAAjC,EAA0C;AACvD,QAAMC,KAAK,GAAG,oBAAd;AACA,QAAMC,cAAc,GAAG,MAAMD,KAAK,CAACE,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEL;AAAP;AAAV,GAAX,EAAyCM,MAAzC,CAC3B,QAD2B,CAA7B;AAGA,QAAMC,YAAY,GAAGL,cAAc,CAACM,GAAf,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAlC,CAArB;AAEA,SAAOC,gBAAOC,UAAP,CAAkBZ,OAAlB,EAA2BO,YAA3B,CAAP;AACD","sourcesContent":["import lodash from 'lodash';\nimport UsersModel from '../models/user';\n\nexport default async function getInvalidUserIds(userIds) {\n  const Users = UsersModel();\n  const validUsersInDb = await Users.find({ userId: { $in: userIds } }).select(\n    'userId'\n  );\n  const validUserIds = validUsersInDb.map((user) => user._id);\n\n  return lodash.difference(userIds, validUserIds);\n}\n"],"file":"get_user_count_by_id.js"}