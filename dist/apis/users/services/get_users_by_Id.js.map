{"version":3,"sources":["../source/apis/users/services/get_users_by_Id.js"],"names":["getUsersById","ids","Users","usersInDB","find","_id","$in","populate","length","Boom","notFound"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,eAAeA,YAAf,CAA4BC,GAA5B,EAAiC;AAC9C,QAAMC,KAAK,GAAG,oBAAd;AACA,QAAMC,SAAS,GAAG,MAAMD,KAAK,CAACE,IAAN,CAAW;AAAEC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,GAAG,EAAEL;AAAP;AAAP,GAAX,EACrBM,QADqB,CACZ,yBADY,EAErBA,QAFqB,CAEZ,MAFY,CAAxB;AAGA,MAAIJ,SAAS,CAACK,MAAV,KAAqBP,GAAG,CAACO,MAA7B,EACE,MAAMC,cAAKC,QAAL,CAAc,mCAAd,CAAN;AACF,SAAOP,SAAP;AACD","sourcesContent":["import Boom from '@hapi/boom';\nimport UsersModel from '../models/user';\n\nexport default async function getUsersById(ids) {\n  const Users = UsersModel();\n  const usersInDB = await Users.find({ _id: { $in: ids } })\n    .populate('locationAccess.division')\n    .populate('role');\n  if (usersInDB.length !== ids.length)\n    throw Boom.notFound('Invalid user ids found in request');\n  return usersInDB;\n}\n"],"file":"get_users_by_Id.js"}