{"version":3,"sources":["../source/apis/modules/routes/modules_get.js"],"names":["router","express","Router","get","baseUrl","secret","env","JWT_SECRET","getLoggedInUser","getModulesByUser"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CAF,MAAM,CAACG,GAAP,CACG,GAAEC,gBAAQ,GADb,EAEE,yBAAW;AACTC,EAAAA,MAAM,EAAEC,aAAIC;AADH,CAAX,CAFF,EAKEC,0BALF,EAMEC,oBANF;eASeT,M","sourcesContent":["import express from 'express';\nimport expressJWT from 'express-jwt';\nimport env from '../../../config/env';\nimport getModulesByUser from '../controllers/modules_get';\nimport getLoggedInUser from '../../../middlewares/get_loggedIn_user';\nimport { baseUrl } from '../baseurl';\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /modules:\n *   get:\n *     tags:\n *       - Module access\n *     description: Returns a list of modules with features\n *     consumes:\n *       - application/json\n *     produces:\n *       - application/json\n *     parameters:\n *     responses:\n *       200:\n *         description: A JSON object\n *         schema:\n *           type: array\n *           items:\n *              type: object\n *              properties:\n *                  moduleId:\n *                      type: string\n *                  features:\n *                      type: array\n *                      items:\n *                          type: object\n *                          properties:\n *                              featureId:\n *                                  type: string\n *                              access:\n *                                  type: array\n *                                  items:\n *                                      type: string\n *       400:\n *         description: Returns 400 if userId or password are invalid\n *         schema:\n *           type: object\n *           properties:\n *              statusCode:\n *                  type: number\n *                  example: 400\n *              error:\n *                  type: string\n *              message:\n *                  type: string\n */\n\nrouter.get(\n  `${baseUrl}/`,\n  expressJWT({\n    secret: env.JWT_SECRET,\n  }),\n  getLoggedInUser,\n  getModulesByUser\n);\n\nexport default router;\n"],"file":"modules_get.js"}