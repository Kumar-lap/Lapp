{"version":3,"sources":["../source/apis/notifications/routes/notifications_put.js"],"names":["router","express","Router","userLocationSchema","query","offset","Joi","number","required","limit","put","baseUrl","secret","env","JWT_SECRET","isRevoked","getLoggedInUser","updateNotifications"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC,eAAIC,MAAJ,GAAaC,QAAb,EADH;AAELC,IAAAA,KAAK,EAAEH,eAAIC,MAAJ,GAAaC,QAAb;AAFF;AADkB,CAA3B;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BAR,MAAM,CAACU,GAAP,CACG,GAAEC,gBAAQ,EADb,EAEE,yBAAW;AACTC,EAAAA,MAAM,EAAEC,aAAIC,UADH;AAETC,EAAAA,SAAS,EAAE;AAFF,CAAX,CAFF,EAME,0BAAUZ,kBAAV,CANF,EAOEa,0BAPF,EAQEC,0BARF;eAWejB,M","sourcesContent":["import express from 'express';\nimport expressJWT from 'express-jwt';\nimport { Joi, celebrate } from 'celebrate';\nimport { baseUrl } from '../baseurl';\nimport env from '../../../config/env';\nimport { getIsRevokedCallBackForAccessToken } from '../../../helpers/revokeToken/checkRevokedToken';\nimport getLoggedInUser from '../../../middlewares/get_loggedIn_user';\nimport updateNotifications from '../controllers/notifications_put';\n\nconst router = express.Router();\n\nconst userLocationSchema = {\n  query: {\n    offset: Joi.number().required(),\n    limit: Joi.number().required(),\n  },\n};\n\n/**\n * @swagger\n * /notifications:\n *   put:\n *     tags:\n *       - Notifications\n *     description: It takes an array of notification ids to mark as read.\n *     consumes:\n *       - application/json\n *     produces:\n *       - application/json\n *     parameters:\n *       - in: body\n *         name: ids\n *         description: It takes _id of notifications\n *         schema:\n *            type: array\n *            items:\n *              type: string\n *     responses:\n *       200:\n *         description: A JSON object\n *         schema:\n *           type: object\n *           properties:\n *              message:\n *                  type: string\n */\n\nrouter.put(\n  `${baseUrl}`,\n  expressJWT({\n    secret: env.JWT_SECRET,\n    isRevoked: getIsRevokedCallBackForAccessToken(),\n  }),\n  celebrate(userLocationSchema),\n  getLoggedInUser,\n  updateNotifications\n);\n\nexport default router;\n"],"file":"notifications_put.js"}