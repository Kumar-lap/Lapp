{"version":3,"sources":["../source/apis/auth/routes/refreshtoken.js"],"names":["router","express","Router","get","baseUrl","secret","env","JWT_REFRESH_SECRET","isRevoked","refreshToken"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCAF,MAAM,CAACG,GAAP,CACG,GAAEC,gBAAQ,eADb,EAEE,yBAAW;AACTC,EAAAA,MAAM,EAAEC,aAAIC,kBADH;AAETC,EAAAA,SAAS,EAAE;AAFF,CAAX,CAFF,EAMEC,yBANF;eASeT,M","sourcesContent":["import express from 'express';\nimport expressJWT from 'express-jwt';\nimport env from '../../../config/env';\nimport refreshToken from '../controllers/refreshtoken_get';\nimport { getIsRevokedCallBackForRefreshToken } from '../../../helpers/revokeToken/checkRevokedToken';\nimport { baseUrl } from '../baseurl';\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /auth/refreshToken:\n *   get:\n *     tags:\n *       - Authentication\n *     description: Returns a jwt token if a valid refresh token is passed through headers\n *     produces:\n *       - application/json\n *     parameters:\n *       - in: header\n *         name: Authorization\n *         description: Existing refresh token must passed\n *         schema:\n *           type: string\n *           required: true\n *     responses:\n *       200:\n *         description: A JSON object\n *         schema:\n *           type: object\n *           properties:\n *              jwt:\n *                  type: string\n *              refreshToken:\n *                  type: string\n *       400:\n *         description: Returns 401 if refresh token is invalid\n *         schema:\n *           type: object\n *           properties:\n *              statusCode:\n *                  type: number\n *                  example: 400\n *              error:\n *                  type: string\n *              message:\n *                  type: string\n */\n\nrouter.get(\n  `${baseUrl}/refreshToken`,\n  expressJWT({\n    secret: env.JWT_REFRESH_SECRET,\n    isRevoked: getIsRevokedCallBackForRefreshToken(),\n  }),\n  refreshToken\n);\n\nexport default router;\n"],"file":"refreshtoken.js"}