{"version":3,"sources":["../source/apis/auth/controllers/logout_post.js"],"names":["login","req","res","next","userId","user","jwt","headers","authorization","split","services","revokeJwt","json","message","error"],"mappings":";;;;;;;AAAA;;;;AAEe,eAAeA,KAAf,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAClD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAG,CAACI,IAAvB;AACA,UAAMC,GAAG,GAAGL,GAAG,CAACM,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAZ;AACA,UAAMC,eAASC,SAAT,CAAmBP,MAAnB,EAA2BE,GAA3B,CAAN;AACA,WAAOJ,GAAG,CAACU,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT,CAAP;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,WAAOX,IAAI,CAACW,KAAD,CAAX;AACD;AACF","sourcesContent":["import services from '../services/index';\n\nexport default async function login(req, res, next) {\n  try {\n    const { userId } = req.user;\n    const jwt = req.headers.authorization.split(' ')[1];\n    await services.revokeJwt(userId, jwt);\n    return res.json({ message: 'User logged out successfully' });\n  } catch (error) {\n    return next(error);\n  }\n}\n"],"file":"logout_post.js"}