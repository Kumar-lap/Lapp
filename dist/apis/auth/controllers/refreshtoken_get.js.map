{"version":3,"sources":["../source/apis/auth/controllers/refreshtoken_get.js"],"names":["getRefreshToken","req","res","next","userId","user","issueTime","Date","now","jwt","services","generateJwt","refreshToken","generateRefreshToken","json","error"],"mappings":";;;;;;;AAAA;;;;AAEe,eAAeA,eAAf,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+C;AAC5D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAG,CAACI,IAAvB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,GAAG,GAAG,MAAMC,eAASC,WAAT,CAAqBP,MAArB,EAA6BE,SAA7B,CAAlB;AACA,UAAMM,YAAY,GAAG,MAAMF,eAASG,oBAAT,CAA8BT,MAA9B,EAAsCE,SAAtC,CAA3B;AACA,WAAOJ,GAAG,CAACY,IAAJ,CAAS;AAAEL,MAAAA,GAAF;AAAOG,MAAAA;AAAP,KAAT,CAAP;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACd,WAAOZ,IAAI,CAACY,KAAD,CAAX;AACD;AACF","sourcesContent":["import services from '../services/index';\n\nexport default async function getRefreshToken(req, res, next) {\n  try {\n    const { userId } = req.user;\n    const issueTime = Date.now();\n    const jwt = await services.generateJwt(userId, issueTime);\n    const refreshToken = await services.generateRefreshToken(userId, issueTime);\n    return res.json({ jwt, refreshToken });\n  } catch (error) {\n    return next(error);\n  }\n}\n"],"file":"refreshtoken_get.js"}