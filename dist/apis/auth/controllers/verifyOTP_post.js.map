{"version":3,"sources":["../source/apis/auth/controllers/verifyOTP_post.js"],"names":["login","req","res","next","mobileRegex","mobileNumber","body","match","Boom","badRequest","code","verificationStatus","services","getOtpVerificationStatus","unauthorized","user","getUserByMobileNumber","issueTime","Date","now","jwt","generateJwt","userId","refreshToken","generateRefreshToken","json","error"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,eAAeA,KAAf,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAClD,MAAI;AACF,UAAMC,WAAW,GAAG,8BAApB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmBJ,GAAG,CAACK,IAA7B;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACE,KAAb,CAAmBH,WAAnB,CAAd;AACA,QAAI,CAACG,KAAL,EAAY,MAAMC,cAAKC,UAAL,CAAgB,uBAAhB,CAAN;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAWT,GAAG,CAACK,IAArB;AACA,UAAMK,kBAAkB,GAAG,MAAMC,eAASC,wBAAT,CAC/BR,YAD+B,EAE/BK,IAF+B,CAAjC;;AAIA,QAAIC,kBAAkB,KAAK,UAA3B,EAAuC;AACrC,YAAMH,cAAKM,YAAL,CAAkB,aAAlB,CAAN;AACD;;AACD,UAAMC,IAAI,GAAG,MAAMH,eAASI,qBAAT,CAA+BX,YAA/B,CAAnB;AACA,UAAMY,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,GAAG,GAAG,MAAMR,eAASS,WAAT,CAAqBN,IAAI,CAACO,MAA1B,EAAkCL,SAAlC,CAAlB;AACA,UAAMM,YAAY,GAAG,MAAMX,eAASY,oBAAT,CACzBT,IAAI,CAACO,MADoB,EAEzBL,SAFyB,CAA3B;AAIA,WAAOf,GAAG,CAACuB,IAAJ,CAAS;AAAEL,MAAAA,GAAF;AAAOG,MAAAA;AAAP,KAAT,CAAP;AACD,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACd,WAAOvB,IAAI,CAACuB,KAAD,CAAX;AACD;AACF","sourcesContent":["import Boom from '@hapi/boom';\nimport services from '../services/index';\n\nexport default async function login(req, res, next) {\n  try {\n    const mobileRegex = /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/;\n    const { mobileNumber } = req.body;\n    const match = mobileNumber.match(mobileRegex);\n    if (!match) throw Boom.badRequest('Invalid mobile number');\n    const { code } = req.body;\n    const verificationStatus = await services.getOtpVerificationStatus(\n      mobileNumber,\n      code\n    );\n    if (verificationStatus !== 'approved') {\n      throw Boom.unauthorized('Invalid OTP');\n    }\n    const user = await services.getUserByMobileNumber(mobileNumber);\n    const issueTime = Date.now();\n    const jwt = await services.generateJwt(user.userId, issueTime);\n    const refreshToken = await services.generateRefreshToken(\n      user.userId,\n      issueTime\n    );\n    return res.json({ jwt, refreshToken });\n  } catch (error) {\n    return next(error);\n  }\n}\n"],"file":"verifyOTP_post.js"}