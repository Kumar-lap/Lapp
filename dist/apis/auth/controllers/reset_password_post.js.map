{"version":3,"sources":["../source/apis/auth/controllers/reset_password_post.js"],"names":["resetPassword","req","res","next","uid","body","newPassword","userId","services","getUserByPasswordChangeUID","json","message","error"],"mappings":";;;;;;;AAAA;;;;AAEe,eAAeA,aAAf,CAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAUH,GAAG,CAACI,IAApB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkBL,GAAG,CAACI,IAA5B;AACA,UAAME,MAAM,GAAG,MAAMC,eAASC,0BAAT,CAAoCL,GAApC,CAArB;AACA,UAAMI,eAASR,aAAT,CAAuBO,MAAvB,EAA+BD,WAA/B,EAA4CF,GAA5C,CAAN;AACA,WAAOF,GAAG,CAACQ,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT,CAAP;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,WAAOT,IAAI,CAACS,KAAD,CAAX;AACD;AACF","sourcesContent":["import services from '../services/index';\n\nexport default async function resetPassword(req, res, next) {\n  try {\n    const { uid } = req.body;\n    const { newPassword } = req.body;\n    const userId = await services.getUserByPasswordChangeUID(uid);\n    await services.resetPassword(userId, newPassword, uid);\n    return res.json({ message: 'Password changed successfully' });\n  } catch (error) {\n    return next(error);\n  }\n}\n"],"file":"reset_password_post.js"}