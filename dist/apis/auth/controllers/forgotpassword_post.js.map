{"version":3,"sources":["../source/apis/auth/controllers/forgotpassword_post.js"],"names":["forgotPassword","req","res","next","email","body","user","services","getUserByEmail","request","generateForgotPasswordResetRequest","userId","mailStatus","sendPasswordResetMail","code","json","error"],"mappings":";;;;;;;AAAA;;;;AAEe,eAAeA,cAAf,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC,EAA8C;AAC3D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAYH,GAAG,CAACI,IAAtB;AAEA,UAAMC,IAAI,GAAG,MAAMC,eAASC,cAAT,CAAwBJ,KAAxB,CAAnB;AACA,UAAMK,OAAO,GAAG,MAAMF,eAASG,kCAAT,CACpBJ,IAAI,CAACK,MADe,CAAtB;AAGA,UAAMC,UAAU,GAAG,MAAML,eAASM,qBAAT,CACvBT,KADuB,EAEvBK,OAAO,CAACK,IAFe,CAAzB;AAIA,WAAOZ,GAAG,CAACa,IAAJ,CAASH,UAAT,CAAP;AACD,GAZD,CAYE,OAAOI,KAAP,EAAc;AACd,WAAOb,IAAI,CAACa,KAAD,CAAX;AACD;AACF","sourcesContent":["import services from '../services/index';\n\nexport default async function forgotPassword(req, res, next) {\n  try {\n    const { email } = req.body;\n\n    const user = await services.getUserByEmail(email);\n    const request = await services.generateForgotPasswordResetRequest(\n      user.userId\n    );\n    const mailStatus = await services.sendPasswordResetMail(\n      email,\n      request.code\n    );\n    return res.json(mailStatus);\n  } catch (error) {\n    return next(error);\n  }\n}\n"],"file":"forgotpassword_post.js"}