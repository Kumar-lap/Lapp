{"version":3,"sources":["../source/apis/auth/services/generate_jwt.js"],"names":["generateJwtToken","userId","issueTime","payload","secret","env","JWT_SECRET","tokenExpiry","expiresIn","TOKEN_EXPIRY","jwt","JWT","sign"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEe,eAAeA,gBAAf,CAAgCC,MAAhC,EAAwCC,SAAxC,EAAmD;AAChE,QAAMC,OAAO,GAAG;AAAEF,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAhB;AACA,QAAME,MAAM,GAAGC,aAAIC,UAAnB;AACA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,SAAS,EAAE,iBAAGH,aAAII,YAAP;AADO,GAApB;;AAGA,QAAMC,GAAG,GAAGC,sBAAIC,IAAJ,CAAST,OAAT,EAAkBC,MAAlB,EAA0BG,WAA1B,CAAZ;;AAEA,SAAOG,GAAP;AACD","sourcesContent":["import JWT from 'jsonwebtoken';\nimport ms from 'ms';\nimport env from '../../../config/env';\n\nexport default async function generateJwtToken(userId, issueTime) {\n  const payload = { userId, issueTime };\n  const secret = env.JWT_SECRET;\n  const tokenExpiry = {\n    expiresIn: ms(env.TOKEN_EXPIRY),\n  };\n  const jwt = JWT.sign(payload, secret, tokenExpiry);\n\n  return jwt;\n}\n"],"file":"generate_jwt.js"}