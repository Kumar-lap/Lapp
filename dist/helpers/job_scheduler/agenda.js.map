{"version":3,"sources":["../source/helpers/job_scheduler/agenda.js"],"names":["emailScheduler","agenda","define","job","email","subject","text","html","attrs","data","scheduleEmailNow","emailData","now","otpScheduler","mobileNumber","scheduleOtpNow","smsScheduler","message","scheduleNewSmsNow","pushNotificationScheduler","topic","notification","schedulePushNotificationForAllUsersNow","userSpecificPushNotificationScheduler","tokens","schedulePushNotificationByDeviceTokensNow"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAKO,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AACrCA,EAAAA,MAAM,CAACC,MAAP,CAAc,0BAAd,EAA0C,MAAOC,GAAP,IAAe;AACvD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,IAAlB;AAAwBC,MAAAA;AAAxB,QAAiCJ,GAAG,CAACK,KAAJ,CAAUC,IAAjD;AACA,UAAM,uBAAUL,KAAV,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,IAAhC,CAAN;AACD,GAHD;AAID;;AAEM,SAASG,gBAAT,CAA0BT,MAA1B,EAAkCU,SAAlC,EAA6C;AAClDV,EAAAA,MAAM,CAACW,GAAP,CAAW,0BAAX,EAAuCD,SAAvC;AACD;;AAEM,SAASE,YAAT,CAAsBZ,MAAtB,EAA8B;AACnCA,EAAAA,MAAM,CAACC,MAAP,CAAc,wBAAd,EAAwC,MAAOC,GAAP,IAAe;AACrD,UAAM;AAAEW,MAAAA;AAAF,QAAmBX,GAAG,CAACK,KAAJ,CAAUC,IAAnC;AACA,UAAM,+CAAsBK,YAAtB,CAAN;AACD,GAHD;AAID;;AAEM,SAASC,cAAT,CAAwBd,MAAxB,EAAgCQ,IAAhC,EAAsC;AAC3CR,EAAAA,MAAM,CAACW,GAAP,CAAW,wBAAX,EAAqCH,IAArC;AACD;;AAEM,SAASO,YAAT,CAAsBf,MAAtB,EAA8B;AACnCA,EAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,MAAOC,GAAP,IAAe;AAChD,UAAM;AAAEW,MAAAA,YAAF;AAAgBG,MAAAA;AAAhB,QAA4Bd,GAAG,CAACK,KAAJ,CAAUC,IAA5C;AACA,UAAM,8BAAQK,YAAR,EAAsBG,OAAtB,CAAN;AACD,GAHD;AAID;;AAEM,SAASC,iBAAT,CAA2BjB,MAA3B,EAAmCQ,IAAnC,EAAyC;AAC9CR,EAAAA,MAAM,CAACW,GAAP,CAAW,mBAAX,EAAgCH,IAAhC;AACD;;AAEM,SAASU,yBAAT,CAAmClB,MAAnC,EAA2C;AAChDA,EAAAA,MAAM,CAACC,MAAP,CAAc,0CAAd,EAA0D,MAAOC,GAAP,IAAe;AACvE,UAAM;AAAEiB,MAAAA,KAAF;AAASC,MAAAA,YAAT;AAAuBZ,MAAAA;AAAvB,QAAgCN,GAAG,CAACK,KAAJ,CAAUC,IAAhD;AACA,UAAM,+DAAiCW,KAAjC,EAAwCC,YAAxC,EAAsDZ,IAAtD,CAAN;AACD,GAHD;AAID;;AACM,SAASa,sCAAT,CAAgDrB,MAAhD,EAAwDQ,IAAxD,EAA8D;AACnER,EAAAA,MAAM,CAACW,GAAP,CAAW,0CAAX,EAAuDH,IAAvD;AACD;;AAEM,SAASc,qCAAT,CAA+CtB,MAA/C,EAAuD;AAC5DA,EAAAA,MAAM,CAACC,MAAP,CAAc,2CAAd,EAA2D,MAAOC,GAAP,IAAe;AACxE,UAAM;AAAEqB,MAAAA,MAAF;AAAUH,MAAAA,YAAV;AAAwBZ,MAAAA;AAAxB,QAAiCN,GAAG,CAACK,KAAJ,CAAUC,IAAjD;AACA,UAAM,kEAAoCe,MAApC,EAA4CH,YAA5C,EAA0DZ,IAA1D,CAAN;AACD,GAHD;AAID;;AACM,SAASgB,yCAAT,CAAmDxB,MAAnD,EAA2DQ,IAA3D,EAAiE;AACtER,EAAAA,MAAM,CAACW,GAAP,CAAW,2CAAX,EAAwDH,IAAxD;AACD","sourcesContent":["import sendEmail from '../emailverification/sendMail';\nimport { sendVerificationToken } from '../otpVerification/twilioVerification';\nimport sendSMS from '../twilio_bulk_sms/bulk_sms_sender';\nimport {\n  createNewNotificationForAllUsers,\n  createNewNotificationByDeviceTokens,\n} from '../pushnotifications/send_push_notifications';\n\nexport function emailScheduler(agenda) {\n  agenda.define('Send password reset mail', async (job) => {\n    const { email, subject, text, html } = job.attrs.data;\n    await sendEmail(email, subject, text, html);\n  });\n}\n\nexport function scheduleEmailNow(agenda, emailData) {\n  agenda.now('Send password reset mail', emailData);\n}\n\nexport function otpScheduler(agenda) {\n  agenda.define('Send one time password', async (job) => {\n    const { mobileNumber } = job.attrs.data;\n    await sendVerificationToken(mobileNumber);\n  });\n}\n\nexport function scheduleOtpNow(agenda, data) {\n  agenda.now('Send one time password', data);\n}\n\nexport function smsScheduler(agenda) {\n  agenda.define('Send sms to users', async (job) => {\n    const { mobileNumber, message } = job.attrs.data;\n    await sendSMS(mobileNumber, message);\n  });\n}\n\nexport function scheduleNewSmsNow(agenda, data) {\n  agenda.now('Send sms to users', data);\n}\n\nexport function pushNotificationScheduler(agenda) {\n  agenda.define('Send push notifications to all users now', async (job) => {\n    const { topic, notification, data } = job.attrs.data;\n    await createNewNotificationForAllUsers(topic, notification, data);\n  });\n}\nexport function schedulePushNotificationForAllUsersNow(agenda, data) {\n  agenda.now('Send push notifications to all users now', data);\n}\n\nexport function userSpecificPushNotificationScheduler(agenda) {\n  agenda.define('Send push notifications to specific users', async (job) => {\n    const { tokens, notification, data } = job.attrs.data;\n    await createNewNotificationByDeviceTokens(tokens, notification, data);\n  });\n}\nexport function schedulePushNotificationByDeviceTokensNow(agenda, data) {\n  agenda.now('Send push notifications to specific users', data);\n}\n"],"file":"agenda.js"}