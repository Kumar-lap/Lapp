{"version":3,"sources":["../source/helpers/otpVerification/twilioVerification.js"],"names":["accountSID","env","TWILIO_ACCOUNT_SID","verificationSID","VERIFY_SERVICE_SID","authToken","TWILIO_AUTH_TOKEN","twilioClient","sendVerificationToken","phoneNumber","verificationStatus","verify","services","verifications","create","to","channel","err","verifyOTP","code","verificationChecks","cancelExistingVerification","mobileNumber","updatedStatus","update","status"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,aAAIC,kBAAvB;AACA,MAAMC,eAAe,GAAGF,aAAIG,kBAA5B;AACA,MAAMC,SAAS,GAAGJ,aAAIK,iBAAtB;AACA,MAAMC,YAAY,GAAG,qBAAOP,UAAP,EAAmBK,SAAnB,CAArB;;AAEO,eAAeG,qBAAf,CAAqCC,WAArC,EAAkD;AACvD,MAAI;AACF,UAAMC,kBAAkB,GAAG,MAAMH,YAAY,CAACI,MAAb,CAC9BC,QAD8B,CACrBT,eADqB,EAE9BU,aAF8B,CAEhBC,MAFgB,CAET;AAAEC,MAAAA,EAAE,EAAEN,WAAN;AAAmBO,MAAAA,OAAO,EAAE;AAA5B,KAFS,CAAjC;AAGA,WAAON,kBAAP;AACD,GALD,CAKE,OAAOO,GAAP,EAAY;AACZ,WAAOA,GAAP;AACD;AACF;;AAEM,eAAeC,SAAf,CAAyBT,WAAzB,EAAsCU,IAAtC,EAA4C;AACjD,QAAMT,kBAAkB,GAAG,MAAMH,YAAY,CAACI,MAAb,CAC9BC,QAD8B,CACrBT,eADqB,EAE9BiB,kBAF8B,CAEXN,MAFW,CAEJ;AAAEC,IAAAA,EAAE,EAAEN,WAAN;AAAmBU,IAAAA;AAAnB,GAFI,CAAjC;AAGA,SAAOT,kBAAP;AACD;;AAEM,eAAeW,0BAAf,CAA0CC,YAA1C,EAAwD;AAC7D,QAAMC,aAAa,GAAG,MAAMhB,YAAY,CAACI,MAAb,CACzBC,QADyB,CAChBT,eADgB,EAEzBU,aAFyB,CAEXS,YAFW,EAGzBE,MAHyB,CAGlB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAHkB,CAA5B;AAIA,SAAOF,aAAP;AACD","sourcesContent":["import twilio from 'twilio';\nimport env from '../../config/env';\n\nconst accountSID = env.TWILIO_ACCOUNT_SID;\nconst verificationSID = env.VERIFY_SERVICE_SID;\nconst authToken = env.TWILIO_AUTH_TOKEN;\nconst twilioClient = twilio(accountSID, authToken);\n\nexport async function sendVerificationToken(phoneNumber) {\n  try {\n    const verificationStatus = await twilioClient.verify\n      .services(verificationSID)\n      .verifications.create({ to: phoneNumber, channel: 'sms' });\n    return verificationStatus;\n  } catch (err) {\n    return err;\n  }\n}\n\nexport async function verifyOTP(phoneNumber, code) {\n  const verificationStatus = await twilioClient.verify\n    .services(verificationSID)\n    .verificationChecks.create({ to: phoneNumber, code });\n  return verificationStatus;\n}\n\nexport async function cancelExistingVerification(mobileNumber) {\n  const updatedStatus = await twilioClient.verify\n    .services(verificationSID)\n    .verifications(mobileNumber)\n    .update({ status: 'canceled' });\n  return updatedStatus;\n}\n"],"file":"twilioVerification.js"}