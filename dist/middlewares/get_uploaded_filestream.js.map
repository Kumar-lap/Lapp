{"version":3,"sources":["../source/middlewares/get_uploaded_filestream.js"],"names":["getUploadedFileStream","req","res","next","file","Boom","badRequest","fileType","originalname","split","size","badData","readFile","util","promisify","fs","fileStream","destination","filename","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEe,eAAeA,qBAAf,CAAqCC,GAArC,EAA0CC,GAA1C,EAA+CC,IAA/C,EAAqD;AAClE,MAAI;AACF,QAAI,CAACF,GAAG,CAACG,IAAT,EAAe;AACb,YAAMC,cAAKC,UAAL,CAAgB,2BAAhB,CAAN;AACD;;AACD,UAAMC,QAAQ,GAAGN,GAAG,CAACG,IAAJ,CAASI,YAAT,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAjB;;AACA,QAAIF,QAAQ,KAAK,KAAjB,EAAwB;AACtB,YAAMF,cAAKC,UAAL,CAAgB,mBAAhB,CAAN;AACD;;AACD,QAAIL,GAAG,CAACG,IAAJ,CAASM,IAAT,KAAkB,CAAtB,EAAyB;AACvB,YAAML,cAAKM,OAAL,CAAa,6BAAb,CAAN;AACD;;AACD,UAAMC,QAAQ,GAAGC,cAAKC,SAAL,CAAeC,YAAGH,QAAlB,CAAjB;;AACA,UAAMI,UAAU,GAAG,MAAMJ,QAAQ,CAC/BX,GAAG,CAACG,IAAJ,CAASa,WAAT,GAAuBhB,GAAG,CAACG,IAAJ,CAASc,QADD,EAE/B,OAF+B,CAAjC;AAIAjB,IAAAA,GAAG,CAACe,UAAJ,GAAiBA,UAAjB;AACAb,IAAAA,IAAI;AACL,GAlBD,CAkBE,OAAOgB,KAAP,EAAc;AACdhB,IAAAA,IAAI,CAACgB,KAAD,CAAJ;AACD;AACF","sourcesContent":["import fs from 'fs';\nimport util from 'util';\nimport Boom from '@hapi/boom';\n\nexport default async function getUploadedFileStream(req, res, next) {\n  try {\n    if (!req.file) {\n      throw Boom.badRequest('File not found in request');\n    }\n    const fileType = req.file.originalname.split('.')[1];\n    if (fileType !== 'csv') {\n      throw Boom.badRequest('Invalid file type');\n    }\n    if (req.file.size === 0) {\n      throw Boom.badData('File size cannot be 0 bytes');\n    }\n    const readFile = util.promisify(fs.readFile);\n    const fileStream = await readFile(\n      req.file.destination + req.file.filename,\n      'utf-8'\n    );\n    req.fileStream = fileStream;\n    next();\n  } catch (error) {\n    next(error);\n  }\n}\n"],"file":"get_uploaded_filestream.js"}